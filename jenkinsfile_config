pipeline {
    agent any

    environment {
        ANSIBLE_CONFIG='/var/lib/jenkins/workspace/ansible/ansible.cfg'
    }

    stages {
        stage('Terraform Building Infrastructure') {
            steps {
                dir('terraform') {
                    sh 'cat ../ansible/hosts'
                    sh 'terraform init'
                    sh 'terraform apply -auto-approve'
                    sh 'terraform output | grep -E -o "([0-9]{1,3}[\\.]){3}[0-9]{1,3}" >> ../ansible/hosts'
                }
                echo 'Done!'
            }
        }

        stage('Ansible Config Servers') {
            steps {
                dir('ansible') {
                    sh 'cat hosts'
                    sh 'ansible -i hosts all --private-key $ANSIBLE_KEY -m ping'
                    sh 'ansible-playbook -i hosts --private-key $ANSIBLE_KEY servcfg.yml'
                }
                echo 'Done!'
            }
        }

        stage('Testing app') {
            steps {
                dir('random_animals') {
                    sh 'virtualenv venv'
                    sh 'source ./venv/bin/activate'
                    sh 'pip install -r requirements.txt'
                    sh 'python3 manage.py test'
                }
                echo 'Done!'
            }
        }

        stage('Deploying app') {
            steps {
                dir('ansible') {
                    sh 'ansible-playbook -i hosts --private-key $ANSIBLE_KEY servcfg.yml'
                }
                echo 'Done!'
            }
        }

        post {
            always {
                archiveArtifacts artifacts: 'random_animals/*', onlyIfSuccessful: true
            }
        }
    }
}